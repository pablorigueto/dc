{"version":3,"file":"theme.min.js","mappings":"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","sources":["webpack://rf/./js/theme/theme.js"],"sourcesContent":["(function ($, Drupal, once) {\n\n  Drupal.behaviors.toggleMenu = {\n    attach(context) {\n      if (!drupalSettings.toggleMenu) {\n        $(document).ready(function () {\n          // Add a click event handler to the Menu heading.\n          $(\".primary_menu h2\", context).click(function () {\n\n            // Find all open menus and close them.\n            $(\".primary_menu ul:visible\", context).not($(this).siblings(\"ul\")).slideUp();\n\n            // Find the related menu element within the same parent.\n            const MENU = $(this).siblings(\"ul\", context);\n  \n            // Check if this menu is already open.\n            const isMenuOpen = MENU.is(\":visible\");\n    \n            // If the menu was not open, then open it.\n            if (!isMenuOpen) {\n              MENU.slideDown();\n            }\n            else {\n              MENU.slideUp();\n            }\n          });\n          // /* To mobile Accordion. */\n          // $(\".primary_menu h2#block-darkgpt-planos-menu\").click(function () {\n          //   // Toggle the 'rotate' class on click\n          //   $(this).addClass('rotate'); \n          // });\n        });\n        drupalSettings.toggleMenu = true;\n      }\n    }\n  }\n\n  // Drupal.behaviors.toggleMenu = {\n  //   attach(context) {\n  //     if (!drupalSettings.toggleMenu) {\n  //       $(document).ready(function () {\n  //         // Add a click event handler to the Menu headings.\n  //         $(\".primary_menu h2\", context).click(function () {\n  \n  //           // Find all open menus and close them.\n  //           $(\".primary_menu ul:visible\", context).not($(this).siblings(\"ul\")).slideUp();\n  \n  //           // Find the related menu element within the same parent.\n  //           const MENU = $(this).siblings(\"ul\", context);\n  \n  //           // Toggle the visibility of the menu.\n  //           MENU.slideToggle();\n  //         });\n  //       });\n  //       drupalSettings.toggleMenu = true;\n  //     }\n  //   }\n  // }; \n\n  Drupal.behaviors.addDefaultLike = {\n    attach(context) {\n      if (!drupalSettings.addDefaultLike) {\n        $(document).ready(function () {\n          // Check if the span with id 'like-1' is empty\n          // let like1Span = $('.path-frontpage .like_dislike span[id^=\"like-\"], ' +\n          //  '.path-search .like_dislike span[id^=\"like-\"]', context);\n          let like1Span = $('.like_dislike span[id^=\"like-\"]', context);\n\n          if (like1Span.text().trim() === '') {\n            // If it's empty, add the value 0\n            like1Span.text('0');\n          }\n        });\n        drupalSettings.addDefaultLike = true;\n      }\n    }\n  }\n\n  Drupal.behaviors.openSearch = {\n    attach(context) {\n      if (!drupalSettings.openSearch) {\n        $(document).ready(function () {\n          // let BANNER = $('.basicpage_header_container');\n          // Add a click event handler to the Menu heading.\n          // $(\"#block-darkgpt-searchbtn-2\", context).click(function () {\n          $(\"#block-darkgpt-searchbtn-2, #search_mobile_icon\", context).click(function () {\n\n            // Search to open.\n            const MENU = $('.search-block-form', context);\n            \n            // Check if this menu is already open.\n            const isMenuOpen = MENU.is(\":visible\");\n    \n            // If the menu was not open, then open it.\n            if (!isMenuOpen) {\n              MENU.slideDown();\n              // BANNER.addClass('hidden');\n            }\n            else {\n              MENU.fadeOut();\n              // BANNER.removeClass('hidden');\n            }\n          });\n        });\n        drupalSettings.openSearch = true;\n      }\n    }\n  }\n\n  Drupal.behaviors.contentRedirect = {\n    attach(context) {\n      if (!drupalSettings.contentRedirect) {\n        $(document).ready(function () {\n          // Add a click event handler to the Menu heading.\n          $(\".path-frontpage .text_and_image\", context).on('click', function () {\n          // Get the href attribute from the anchor within the clicked element.\n          var link = $(this).find('a').attr('href');\n            // Redirect to the specified URL\n            window.location.href = link;\n          });\n        });\n        drupalSettings.contentRedirect = true;\n      }\n    }\n  }\n\n  Drupal.behaviors.toggleSearch = {\n    attach(context) {\n      if (!drupalSettings.toggleSearch) {\n        $(document).ready(function () {\n \n          // Add a click event handler to the Menu heading.\n          $(\".menu--search-btn\", context).click(function () {\n\n            // Find the related menu element within the same parent.\n            const MENU = $(this).siblings(\".search-block-form\");\n  \n            // Check if this menu is already open.\n            const isMenuOpen = MENU.is(\":visible\");\n  \n            // Hide all menus.\n            $(\".search-block-form\").slideToggle();\n  \n            // If the menu was not open, then open it.\n            if (!isMenuOpen) {\n              MENU.slideDown();\n            }\n          });\n        });\n        drupalSettings.toggleSearch = true;\n      }\n    }\n  }\n\n  Drupal.behaviors.pressEscToCloseIt = {\n    attach: function attach(context) {\n      if (!drupalSettings.pressEscToCloseIt) {\n        drupalSettings.pressEscToCloseIt = true;\n        // let BANNER = $('.path-node .basicpage_header_container');\n        once('pressEscToCloseIt', '.search-block-form', context).forEach(element => {\n          let searchForm = $(\"body:not(.path-frontpage) .search-block-form\");\n          // Add a keydown event handler to close the menu when pressing ESC.\n          $(document).on('keydown', function (event) {\n            if (event.key === 'Escape' || event.keyCode === 27) {\n              // BANNER.removeClass('hidden');\n              searchForm.slideUp();\n            }\n          });\n        });\n      }\n    }\n  };  \n\n  Drupal.behaviors.mobileMenu = {\n    attach(context) {\n      if (!drupalSettings.mobileMenu) {\n        $(document).ready(function () {\n          // Add a click event handler to the Menu heading.\n          $(\".mobile\", context).click(function () {\n            // Find the related menu element within the same parent.\n            const MENU = $(this).siblings(\".primary_menu\");\n            // Check if the menu element exists.\n            if (MENU.length) {\n              // Toggle the menu visibility.\n              MENU.slideToggle();\n            }\n          });\n        });\n        drupalSettings.mobileMenu = true;\n      }\n    }\n  };\n\n  Drupal.behaviors.addCopyCodeBtn = {\n    attach: function attach(context) {\n      if (!drupalSettings.addCopyCodeBtn) {\n        drupalSettings.addCopyCodeBtn = true;\n        once('addCopyCodeBtn', '.path-node pre', context).forEach(element => {\n          $(element).append(\"<div class='btnFromJs'><span>copy</span></div>\");\n        });\n      }\n    }\n  };\n\n  Drupal.behaviors.copyCode = {\n    attach: function attach(context) {\n      if (!drupalSettings.copyCode) {\n        drupalSettings.copyCode = true;\n        once('copyCode', '.path-node pre .btnFromJs', context).forEach(element => {\n          element.addEventListener('click', async e => {\n    \n            // Append the 'popFromJs' div to the parent <pre> element\n            let preElement = element.closest('pre');\n\n            if ($(preElement).find('.popFromJs').length === 0) {\n              $(preElement).append(\"<div class='popFromJs'><span>copied!</span></div>\");\n            }\n    \n            // Get the newly appended 'popFromJs' div.\n            let copyCodeDiv = $(preElement).find('.popFromJs');\n    \n            // Exclude both '.btnFromJs' and '.popFromJs' elements when copying text.\n            let copyText = $(preElement)\n              .clone()\n              .find('.btnFromJs, .popFromJs')\n              .remove()\n              .end()\n              .text();\n    \n            try {\n              // Use the Clipboard API to copy the text\n              await navigator.clipboard.writeText(copyText);\n    \n              // Fade in the cloned copyCodeDiv\n              copyCodeDiv.fadeIn();\n    \n              // Re-add the 'none' display style after a 1-second delay\n              setTimeout(function() {\n                copyCodeDiv.fadeOut();\n\n              }, 800); // 800 milliseconds = 0.8 seconds\n    \n            }\n            catch (err) {\n              console.error('Failed to copy text: ', err);\n            }\n          });\n        });\n      }\n    }\n  };\n\n\n})(jQuery, Drupal, once);\n"],"names":["$","Drupal","once","behaviors","toggleMenu","attach","context","drupalSettings","document","ready","click","not","this","siblings","slideUp","MENU","is","slideDown","addDefaultLike","like1Span","text","trim","openSearch","fadeOut","contentRedirect","on","link","find","attr","window","location","href","toggleSearch","isMenuOpen","slideToggle","pressEscToCloseIt","forEach","element","searchForm","event","key","keyCode","mobileMenu","length","addCopyCodeBtn","append","copyCode","addEventListener","async","preElement","closest","copyCodeDiv","copyText","clone","remove","end","navigator","clipboard","writeText","fadeIn","setTimeout","err","jQuery"],"sourceRoot":""}
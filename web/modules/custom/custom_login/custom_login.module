<?php

/**
 * @file
 * Contains Custom Login.
 */

use Drupal\user\UserInterface;

/**
 * Allow the visitors to get auth without admin approval.
 */
function custom_login_update_10001() {
  // Update the configuration value.
  $config = \Drupal::configFactory()->getEditable('user.settings');
  $config->set('register', 'visitor');
  $config->save();
}

/**
 * Implements hook_page_attachments().
 */
function custom_login_page_attachments(array &$attachments) {
  if (!\Drupal::service('router.admin_context')->isAdminRoute()) {
    $attachments['#attached']['library'][] = 'custom_login/custom-login-styling';
  }
}

/**
 * Implements hook_user_insert().
 */
function custom_login_user_insert(UserInterface $account) {
  // Auto active the account.
  // Set the user status to "active".
  $account->activate();
  // Save the user entity.
  $account->save();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function custom_login_form_user_register_form_alter(&$form, &$form_state, $form_id) {
  // Add custom validation function to validate email.
  $form['#validate'][] = '_custom_login_validate_email';
}

/**
 * Implements hook_form_alter().
 */
function custom_login_form_alter(&$form, &$form_state, $form_id) {
  // Check if the form is the user registration form.
  if ($form_id === 'user_register_form') {
    // Modify the form element descriptions as needed.
    $form['user_picture']['widget'][0]['#upload_validators']['FileSizeLimit']['fileLimit'] = 5000000; // half mega.

    
    // Modify the form element descriptions as needed.
    $file_limit_message = '<div class="file-limit-message">' . t('500KB Limit') . '</div>';
    $file_description_message = '<div class="file-description-message">' . t('Your new virtual face or picture.') . '</div>';

    // Add the file size limit message.
    $form['user_picture']['widget'][0]['#description'] = [
      '#markup' => $file_limit_message,
    ];

    // Add the file description message.
    $form['user_picture']['widget'][0]['#description']['#markup'] .= $file_description_message;
    

  }
}

/**
 * Custom validation function to check email on user registration.
 */
function _custom_login_validate_email(&$form, &$form_state) {
  $email = $form_state->getValue('mail');

  // Validate email format.
  if (!\Drupal::service('email.validator')->isValid($email)) {
    $form_state->setErrorByName('mail', t('The email address %mail is not valid.', ['%mail' => $email]));
  }

  // Check if email is already registered.
  $users = \Drupal::entityTypeManager()->getStorage('user')->loadByProperties(['mail' => $email]);
  $account = reset($users);
  if ($account) {
    $form_state->setErrorByName('mail', t('The email address %mail is already registered.', ['%mail' => $email]));
  }
}
